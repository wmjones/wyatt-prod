name: "Terraform Apply"

on:
    push:
      branches:
        - main
        - dev

env:
  TF_CLOUD_ORGANIZATION: "wyatt-personal-aws"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TODOIST_API_SECRET: "${{ secrets.TODOIST_API_SECRET }}"
  NOTION_API_SECRET: "${{ secrets.NOTION_API_SECRET }}"
  TF_WORKSPACE: >-
    ${{
      github.ref == 'refs/heads/main' && 'wyatt-personal-aws-prod' ||
      'wyatt-personal-aws-dev'
    }}
  CONFIG_DIRECTORY: "./main"
  # No longer using tfvars file directly, using Terraform Cloud variables instead

jobs:
  # First check if we need to run React tests/build for dev branch
  check_react_changes:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    outputs:
      react_changes: ${{ steps.filter.outputs.react }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            react:
              - 'src/frontend/react-app/**'

  # Run React Tests and Build if changes detected in dev branch
  react_build:
    needs: check_react_changes
    if: github.ref == 'refs/heads/dev' && needs.check_react_changes.outputs.react_changes == 'true'
    uses: ./.github/workflows/react-tests.yml

  deployment_package_zip:
    uses: ./.github/workflows/deployment_package_zip.yml

  terraform:
    # Run after deployment package and React build (if applicable)
    needs: [deployment_package_zip, check_react_changes]
    # If react_build job was needed, wait for it too
    if: >-
      always() &&
      needs.deployment_package_zip.result == 'success' &&
      (github.ref != 'refs/heads/dev' || needs.check_react_changes.outputs.react_changes != 'true' || (needs.check_react_changes.outputs.react_changes == 'true' && needs.react_build.result == 'success'))
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-package
          path: ./main/

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}
          # Environment variables are automatically passed to Terraform Cloud

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

      # Skip frontend deploy - it will be triggered automatically from this workflow
